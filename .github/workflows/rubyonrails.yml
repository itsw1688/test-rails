# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: development
    container:
      image: ruby:2.6.5
      env:
        RAILS_ENV: test
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Packages
        run: |
          apt-get update -qq && apt-get install -y mariadb-client jq
          apt-get update && apt-get install -y curl apt-transport-https wget
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
          apt-get update && apt-get install -y yarn
          curl -sL https://deb.nodesource.com/setup_14.x | bash - 
          apt-get install -y nodejs

      # Add or replace dependency steps here
      #- name: Install Ruby and gems
      #  uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
      #  with:
      #    bundler-cache: true

      - name: Setup
        run: |
          env
          gem install bundler aws_lambda_ric
          bundle install -j4

      - name: Run Task
        run: |
          rails import:run

      - name: Run Task
        run: |
          err_code=$(cat log/${RAILS_ENV}.log | jq .err_code)
          echo $err_code

      - name: Submit Issue
        run: |
          env
          rails issue:run

      # Add or replace database setup steps here
      #- name: Set up database schema
      #  run: bin/rails db:schema:load

      # Add or replace test runners here
      #- name: Run tests
      #  run: bin/rake


